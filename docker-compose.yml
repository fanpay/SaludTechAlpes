networks:
  pulsar:
    driver: bridge
  transformacionesnet:
    driver: bridge

  # ATENCION: Descomentar si se va a utilizar y probar en un ambiente local
  # procesamientonet:
  #  driver: bridge
services:
  # Init cluster metadata
  pulsar-init:
    container_name: pulsar-init
    hostname: pulsar-init
    image: apachepulsar/pulsar:latest
    profiles: ["pulsar"]
    networks:
      - pulsar
    command: bin/pulsar initialize-cluster-metadata --cluster cluster-a --zookeeper zookeeper:2181 --configuration-store zookeeper:2181 --web-service-url http://broker:8080 --broker-service-url pulsar://broker:6650

    depends_on:
      zookeeper:
        condition: service_healthy


# Start zookeeper
  zookeeper:
    user: root
    image: apachepulsar/pulsar:latest
    profiles: ["pulsar"]
    container_name: zookeeper
    restart: on-failure
    networks:
      - pulsar
    volumes:
      - ./data/zookeeper:/pulsar/data/zookeeper
    environment:
      - metadataStoreUrl=zk:zookeeper:2181
      - PULSAR_MEM=-Xms256m -Xmx256m -XX:MaxDirectMemorySize=256m
    command: >
      bash -c "bin/apply-config-from-env.py conf/zookeeper.conf && \
             bin/generate-zookeeper-config.sh conf/zookeeper.conf && \
             exec bin/pulsar zookeeper"
    healthcheck:
      test: ["CMD", "bin/pulsar-zookeeper-ruok.sh"]
      interval: 10s
      timeout: 5s
      retries: 30

# Start bookie
  bookie:
    user: root
    image: apachepulsar/pulsar:latest
    profiles: ["pulsar"]
    container_name: bookie
    restart: on-failure
    networks:
      - pulsar
    environment:
      - clusterName=cluster-a
      - zkServers=zookeeper:2181
      - metadataServiceUri=metadata-store:zk:zookeeper:2181
      # otherwise every time we run docker compose uo or down we fail to start due to Cookie
      # See: https://github.com/apache/bookkeeper/blob/405e72acf42bb1104296447ea8840d805094c787/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Cookie.java#L57-68
      - advertisedAddress=bookie
      - BOOKIE_MEM=-Xms512m -Xmx512m -XX:MaxDirectMemorySize=256m
    depends_on:
      zookeeper:
        condition: service_healthy
      pulsar-init:
        condition: service_completed_successfully
    # Map the local directory to the container to avoid bookie startup failure due to insufficient container disks.
    volumes:
      - ./data/bookkeeper:/pulsar/data/bookkeeper
    command: bash -c "bin/apply-config-from-env.py conf/bookkeeper.conf && exec bin/pulsar bookie"

# Start broker
  broker:
    user: root
    image: apachepulsar/pulsar:latest
    profiles: ["pulsar"]
    container_name: broker
    hostname: broker
    restart: on-failure
    networks:
      - pulsar
    environment:
      - metadataStoreUrl=zk:zookeeper:2181
      - zookeeperServers=zookeeper:2181
      - clusterName=cluster-a
      - managedLedgerDefaultEnsembleSize=1
      - managedLedgerDefaultWriteQuorum=1
      - managedLedgerDefaultAckQuorum=1
      - advertisedAddress=broker
      #Si se realiza una ejecución manual, este dato debe cambiar al siguiente:
      #- advertisedListeners=external:pulsar://127.0.0.1:6650
      - advertisedListeners=external:pulsar://broker:6650
      - PULSAR_MEM=-Xms512m -Xmx512m -XX:MaxDirectMemorySize=256m
    depends_on:
      zookeeper:
        condition: service_healthy
      bookie:
        condition: service_started
    ports:
      - "6650:6650"
      - "8080:8080"
    command: bash -c "bin/apply-config-from-env.py conf/broker.conf &&  exec bin/pulsar broker"

#Using standalone version for simplicity
  # pulsar:
  #   image: apachepulsar/pulsar:3.2.0
  #   profiles: ["pulsar"]
  #   container_name: pulsar
  #   restart: on-failure
  #   ports:
  #     - "6650:6650"
  #     - "8080:8080"
  #   command: ["bin/pulsar", "standalone"]
  #   networks:
  #     - pulsar


     # Bases de datos de Transformaciones
  transformacionesdb:
    image: postgres:latest
    container_name: transformacionesdb
    ports:
      - "5432:5432"
    networks:
      - transformacionesnet
    environment:
      POSTGRES_DB: transformacionesdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-procesamientodb.sh:/docker-entrypoint-initdb.d/init-procesamientodb.sh
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 2s
      timeout: 5s
      retries: 5
    profiles: ["transformaciones"]


  # Bases de datos de Transformaciones
  # ATENCION: Descomentar si se va a utilizar y probar en un ambiente local
  # procesamientodb:
  #   image: postgres:latest
  #   container_name: procesamientodb
  #   ports:
  #     - "5532:5432"
  #   networks:
  #     - procesamientonet
  #   environment:
  #     POSTGRES_DB: procesamientodb
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: postgres
  #     POSTGRES_HOST: localhost
  #     POSTGRES_PORT: 5432
  #   healthcheck:
  #     test: [ "CMD-SHELL", "pg_isready -U postgres" ]
  #     interval: 2s
  #     timeout: 5s
  #     retries: 5
  #   profiles: ["procesamiento"]


  # Servicios de SaludTech
  saludtech-transformacion:
    container_name: saludtech
    hostname: saludtech
    build:
      context: .
      dockerfile: transformacion.Dockerfile
    profiles: ["saludtech-transformacion"]
    networks:
      - transformacionesnet
      - pulsar
    depends_on:
      - transformacionesdb
      - broker
    environment:
      - PULSAR_ADDRESS=broker
      - BROKER_HOST=broker
      - POSTGRES_DB=transformacionesdb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=transformacionesdb
      - POSTGRES_PORT=5432
    ports:
      - "5000:5000"

  saludtech-enriquecimiento:
    container_name: enriquecimiento
    hostname: enriquecimiento
    build:
      context: .
      dockerfile: enriquecimiento.Dockerfile
    profiles: ["saludtech-enriquecimiento"]
    networks:
      - transformacionesnet
      - pulsar
    depends_on:
      - transformacionesdb
      - broker
    environment:
      - PULSAR_ADDRESS=broker
      - BROKER_HOST=broker
      - POSTGRES_DB=transformacionesdb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=transformacionesdb
      - POSTGRES_PORT=5432
    ports:
      - "6000:5000"

  saludtech-procesamiento:
    container_name: procesamiento
    hostname: procesamiento
    build:
      context: .
      dockerfile: procesamiento.Dockerfile
    profiles: ["saludtech-procesamiento"]
    networks:
      - transformacionesnet
      # ATENCION: Descomentar si se va a utilizar y probar en un ambiente local
      #- procesamientonet
      - pulsar
    depends_on:
      # - procesamientodb
      - broker
    environment:
      - PULSAR_ADDRESS=broker
      - BROKER_HOST=broker
      - POSTGRES_DB=procesamientodb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      # ATENCION: Descomentar si se va a utilizar y probar en un ambiente local
      #- POSTGRES_HOST=procesamientodb
      - POSTGRES_HOST=transformacionesdb
      - POSTGRES_PORT=5432
    ports:
      - "7000:5000"
  saludtech-frontend:
    container_name: frontend
    hostname: procesamiento
    build:
      context: .
      dockerfile: frontend.Dockerfile
    profiles: ["saludtech-frontend"]
    networks:
      - transformacionesnet
      # ATENCION: Descomentar si se va a utilizar y probar en un ambiente local
      #- procesamientonet
      - pulsar
    ports:
      - "80:4200"
volumes:
  postgres-data:
