networks:
  pulsar:
    driver: bridge
  transformacionesnet:
    driver: bridge

  # ATENCION: Descomentar si se va a utilizar y probar en un ambiente local
  # procesamientonet:
  #  driver: bridge

services:
  # Servicio Traefik para enrutar el tráfico del dominio
  traefik:
    image: traefik:v3.3.4
    container_name: traefik
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    command:
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--api.dashboard=true"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - transformacionesnet

  # Init cluster metadata
  pulsar-init:
    container_name: pulsar-init
    hostname: pulsar-init
    image: apachepulsar/pulsar:latest
    profiles: ["pulsar"]
    networks:
      - pulsar
    command: bin/pulsar initialize-cluster-metadata --cluster cluster-a --zookeeper zookeeper:2181 --configuration-store zookeeper:2181 --web-service-url http://broker:8080 --broker-service-url pulsar://broker:6650
    depends_on:
      zookeeper:
        condition: service_healthy

  # Start zookeeper
  zookeeper:
    user: root
    image: apachepulsar/pulsar:latest
    profiles: ["pulsar"]
    container_name: zookeeper
    restart: on-failure
    networks:
      - pulsar
    volumes:
      - ./data/zookeeper:/pulsar/data/zookeeper
    environment:
      - metadataStoreUrl=zk:zookeeper:2181
      - PULSAR_MEM=-Xms256m -Xmx256m -XX:MaxDirectMemorySize=256m
    command: >
      bash -c "bin/apply-config-from-env.py conf/zookeeper.conf && \
             bin/generate-zookeeper-config.sh conf/zookeeper.conf && \
             exec bin/pulsar zookeeper"
    healthcheck:
      test: ["CMD", "bin/pulsar-zookeeper-ruok.sh"]
      interval: 10s
      timeout: 5s
      retries: 30

  # Start bookie
  bookie:
    user: root
    image: apachepulsar/pulsar:latest
    profiles: ["pulsar"]
    container_name: bookie
    restart: on-failure
    networks:
      - pulsar
    environment:
      - clusterName=cluster-a
      - zkServers=zookeeper:2181
      - metadataServiceUri=metadata-store:zk:zookeeper:2181
      - advertisedAddress=bookie
      - BOOKIE_MEM=-Xms512m -Xmx512m -XX:MaxDirectMemorySize=256m
    depends_on:
      zookeeper:
        condition: service_healthy
      pulsar-init:
        condition: service_completed_successfully
    volumes:
      - ./data/bookkeeper:/pulsar/data/bookkeeper
    command: bash -c "bin/apply-config-from-env.py conf/bookkeeper.conf && exec bin/pulsar bookie"

  # Start broker
  broker:
    user: root
    image: apachepulsar/pulsar:latest
    profiles: ["pulsar"]
    container_name: broker
    hostname: broker
    restart: on-failure
    networks:
      - pulsar
    environment:
      - metadataStoreUrl=zk:zookeeper:2181
      - zookeeperServers=zookeeper:2181
      - clusterName=cluster-a
      - managedLedgerDefaultEnsembleSize=1
      - managedLedgerDefaultWriteQuorum=1
      - managedLedgerDefaultAckQuorum=1
      - advertisedAddress=broker
      - advertisedListeners=external:pulsar://broker:6650
      - PULSAR_MEM=-Xms512m -Xmx512m -XX:MaxDirectMemorySize=256m
    depends_on:
      zookeeper:
        condition: service_healthy
      bookie:
        condition: service_started
    ports:
      - "6650:6650"
      - "8080:8080"
    command: bash -c "bin/apply-config-from-env.py conf/broker.conf &&  exec bin/pulsar broker"

  transformacionesdb:
    image: postgres:latest
    container_name: transformacionesdb
    ports:
      - "5432:5432"
    networks:
      - transformacionesnet
    environment:
      POSTGRES_DB: transformacionesdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-procesamientodb.sh:/docker-entrypoint-initdb.d/init-procesamientodb.sh
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 2s
      timeout: 5s
      retries: 5
    profiles: ["transformaciones"]

  saludtech-transformacion:
    container_name: saludtech
    hostname: saludtech
    build:
      context: .
      dockerfile: transformacion.Dockerfile
    profiles: ["saludtech-transformacion"]
    networks:
      - transformacionesnet
      - pulsar
    depends_on:
      - transformacionesdb
      - broker
    environment:
      - PULSAR_ADDRESS=broker
      - BROKER_HOST=broker
      - POSTGRES_DB=transformacionesdb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=transformacionesdb
      - POSTGRES_PORT=5432
    ports:
      - "5000:5000"

  saludtech-enriquecimiento:
    container_name: enriquecimiento
    hostname: enriquecimiento
    build:
      context: .
      dockerfile: enriquecimiento.Dockerfile
    profiles: ["saludtech-enriquecimiento"]
    networks:
      - transformacionesnet
      - pulsar
    depends_on:
      - transformacionesdb
      - broker
    environment:
      - PULSAR_ADDRESS=broker
      - BROKER_HOST=broker
      - POSTGRES_DB=transformacionesdb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=transformacionesdb
      - POSTGRES_PORT=5432
    ports:
      - "6000:5000"

  saludtech-procesamiento:
    container_name: procesamiento
    hostname: procesamiento
    build:
      context: .
      dockerfile: procesamiento.Dockerfile
    profiles: ["saludtech-procesamiento"]
    networks:
      - transformacionesnet
      - pulsar
    depends_on:
      - broker
    environment:
      - PULSAR_ADDRESS=broker
      - BROKER_HOST=broker
      - POSTGRES_DB=procesamientodb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=transformacionesdb
      - POSTGRES_PORT=5432
    ports:
      - "7000:5000"

  saludtech-frontend:
    container_name: frontend
    hostname: procesamiento
    build:
      context: .
      dockerfile: frontend.Dockerfile
    profiles: ["saludtech-frontend"]
    networks:
      - transformacionesnet
      - pulsar
    depends_on:
      - broker
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`saludtechalpes.felixorduz.dev`)"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.services.frontend.loadbalancer.server.port=4200"
    # Se elimina el mapeo de puertos ya que Traefik se encargará de exponer el servicio
    # ports:
    #   - "80:4200"

volumes:
  postgres-data:
